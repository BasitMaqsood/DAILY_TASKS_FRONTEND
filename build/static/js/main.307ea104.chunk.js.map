{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieServices.js","components/common/tableBody.jsx","components/common/tableHeader.jsx","components/common/table.jsx","components/common/like.jsx","services/authService.js","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","services/genreService.js","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/common/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/movieForm.jsx","components/navBar.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["logService","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","state","logger","toast","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","movieUrl","id","concat","getMovie","movieId","http","saveMovie","movie","_id","body","Object","objectSpread","TableBody","renderCell","item","column","content","_","path","createKey","key","_this2","this","_this$props","props","data","columns","react_default","a","createElement","map","Component","TableHeader","raiseSort","sortColumn","_this","order","onSort","renderSortIcon","className","onClick","label","Table","_ref","movies","tableHeader","tableBody","Like","classes","liked","style","cursor","aria-hidden","tokenKey","_callee","email","password","regenerator_default","wrap","_context","prev","next","sent","localStorage","setItem","stop","getJwt","getItem","authService","login","_x","_x2","_login","apply","arguments","logout","removeItem","loginWithJwt","getCurrentUser","jwtDecode","_unused","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","react_router_dom","to","title","like","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","table","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","Pagination","itemCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","range","page","getGenres","Input","name","errors","rest","objectWithoutProperties","Fragment","htmlFor","assign","Select","options","value","option","Form","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","_ref2","input","currentTarget","errorMessage","disabled","type","length","_this$state","common_input","onChange","_this$state2","common_select","SearchBox","placeholder","Movies","allMovies","genres","count","searchQuery","selectedGenre","handleDelete","orignalMovies","filter","m","t0","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","_this$getPagedData","listGroup","marginBottom","searchBox","moviesTable","pagination","Customers","Rentals","NotFound","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","integer","history","replace","match","params","mapToViewModel","_context3","populateGenre","populateMovie","onSubmit","renderInput","renderSelect","renderButton","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","LoginForm","username","location","window","from","pathname","react_router","minDomainSegments","Logout","ProtectedRoute","component","render","App","react_toastify","navBar","RegisterForm","protectedRoute","components_movies","exact","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.307ea104.chunk.js","sourcesContent":["function init(){ }\r\n\r\nfunction log(error){\r\n    console.error(error);\r\n}\r\n\r\nexport default {\r\n    init,\r\n    log\r\n};","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport logger from './logService';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null , error =>{\r\n    const expectedError = \r\n      error.response && \r\n      error.response.status >=400 && \r\n      error.response.state <500;\r\n      \r\n      if(!expectedError){\r\n  \r\n        logger.log(error);\r\n        toast(\"An Unexpected Error Occured\");\r\n      }\r\n\r\n      return Promise.reject(error);\r\n  });\r\n\r\n  function setJwt(jwt){\r\n    axios.defaults.headers.common['x-auth-token'] = jwt;\r\n  }\r\n\r\n  export default {\r\n      get: axios.get,\r\n      post: axios.post,\r\n      put: axios.put,\r\n      delete: axios.delete,\r\n      setJwt\r\n  };","import http from './httpService';\r\n\r\nconst apiEndpoint = '/movies';\r\n\r\nfunction movieUrl(id){\r\n    return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies(){\r\n    return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId){\r\n    return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie){\r\n    if(movie._id){\r\n        const body = { ...movie };\r\n        delete body._id;\r\n        return http.put(movieUrl(movie._id), body);\r\n\r\n    }\r\n    return http.post(apiEndpoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId){\r\n    return http.delete(movieUrl(movieId));\r\n}","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component {\r\n    renderCell = (item , column) =>{\r\n        if(column.content) return column.content(item);\r\n        return _.get(item , column.path);\r\n    };\r\n\r\n    createKey = (item , column) =>{\r\n        return item._id + (column.path || column.key);\r\n    };\r\n\r\n    render() { \r\n        const { data , columns } = this.props;\r\n\r\n        return ( \r\n            <tbody>\r\n                {data.map(item =>\r\n                    <tr key={item._id}>{\r\n                        columns.map((column) =>\r\n                            <td key={this.createKey(item , column)}>\r\n                                {this.renderCell(item , column)}\r\n                            </td>)\r\n                        }</tr>)}\r\n            </tbody>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TableBody;","import React, { Component } from 'react';\r\n\r\n//columns : array\r\n//sortColumn : object\r\n//onSort : function\r\n\r\nclass TableHeader extends Component {\r\n\r\n    raiseSort = path =>{\r\n        const sortColumn = { ...this.props.sortColumn };\r\n        if(sortColumn.path === path)\r\n           sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';\r\n       else{\r\n           sortColumn.path = path;\r\n           sortColumn.order = 'asc';\r\n       }\r\n\r\n       this.props.onSort(sortColumn);\r\n    }\r\n\r\n    renderSortIcon = column =>{\r\n        const { sortColumn } = this.props;\r\n\r\n        if(column.path !== sortColumn.path) return null;\r\n        if(sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>;\r\n        return <i className=\"fa fa-sort-desc\"></i>;\r\n    }\r\n\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <thead>\r\n                <tr>\r\n                    { this.props.columns.map(column =>(\r\n                        <th className=\"clickable\"\r\n                        key={column.path || column.key} onClick={() => this.raiseSort(column.path)}>\r\n                    { column.label } { this.renderSortIcon(column) }\r\n                    </th>))}\r\n                </tr>\r\n            </thead>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TableHeader;","import React from 'react';\r\nimport TableBody from './tableBody';\r\nimport TableHeader from './tableHeader';\r\n\r\nconst Table = ({ columns , sortColumn , movies , onSort }) => {\r\n    return ( \r\n        <table className=\"table\">\r\n            <TableHeader \r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                onSort={onSort} />\r\n            \r\n            <TableBody columns={columns} data={movies} />\r\n        </table>\r\n     );\r\n}\r\n \r\nexport default Table;","import React from 'react';\r\n\r\nconst Like = props => {\r\n\r\n    let classes = \"fa fa-heart\";\r\n    if(!props.liked) classes += \"-o\"\r\n    return ( \r\n            <i onClick={props.onClick}\r\n                style={{ cursor: 'pointer' }}\r\n                className={classes}\r\n                aria-hidden=\"true\"></i>   \r\n     );\r\n}\r\n \r\n \r\nexport default Like;","import jwtDecode from 'jwt-decode';\r\nimport http from './httpService';\r\nimport { async } from 'q';\r\n\r\nconst apiEndpoint = '/auth';\r\nconst tokenKey = 'token';\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email , password){\r\n    const { data: jwt } = await http.post(apiEndpoint , { email , password });\r\n    localStorage.setItem(tokenKey , jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt){\r\n    localStorage.setItem(tokenKey , jwt);\r\n}\r\n\r\nexport function logout(){\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser(){\r\n    try{\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt);\r\n \r\n      }catch{\r\n          return null;\r\n      }\r\n}\r\n\r\nexport function getJwt(){\r\n    return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    loginWithJwt,\r\n    getCurrentUser,\r\n    getJwt\r\n};","import React , { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from './common/table';\r\nimport Like from './common/like';\r\nimport auth from '../services/authService';\r\n\r\nclass MoviesTable extends Component {\r\n\r\n\r\n    columns = [\r\n        { path: 'title',\r\n         label:'Title',\r\n         content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link> },\r\n        { path: 'genre.name' , label : 'Genre' },\r\n        { path: 'numberInStock' , label : 'Stock' },\r\n        { path: 'dailyRentalRate' , label : 'Rate' },\r\n        { key: 'like' , \r\n        content:movie => (<Like liked={movie.liked} onClick={() => this.props.onLike(movie)}/>)\r\n    }\r\n    ];\r\n\r\n    deleteColumn ={ key: 'delete',\r\n     content : movie =>(<button onClick={() => this.props.onDelete(movie)}\r\n    className=\"btn btn-outline-danger btn-sm\">Delete</button>)};\r\n\r\n    constructor(){\r\n        super();\r\n        const user = auth.getCurrentUser();\r\n        if(user && user.isAdmin)  this.columns.push(this.deleteColumn);\r\n    }\r\n \r\n\r\n    render() { \r\n\r\n        const { movies , onSort , sortColumn } = this.props;\r\n        return ( \r\n           <Table \r\n                columns={this.columns}\r\n                movies = {movies}\r\n                sortColumn={sortColumn}\r\n                onSort = {onSort}\r\n                />\r\n         );\r\n    }\r\n}\r\n  \r\nexport default MoviesTable;","import React from 'react';\r\n\r\nconst ListGroup = ({ items, textProperty, valueProperty, onItemSelect, selectedItem }) => {\r\n    return ( \r\n        <ul className=\"list-group\">\r\n            { items.map((item => \r\n            <li onClick={ () => onItemSelect(item)}\r\n             key={item[valueProperty]}\r\n              className={ item === selectedItem ? 'list-group-item list-group-item-action active' : 'list-group-item list-group-item-action'}>\r\n            {item[textProperty]}\r\n            </li>\r\n            ))\r\n            }\r\n            \r\n        </ul>\r\n     );\r\n}\r\n\r\nListGroup.defaultProps = {\r\n    textProperty: \"name\",\r\n    valueProperty: \"_id\"\r\n}\r\n \r\nexport default ListGroup;","import React  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = ({ itemCount , pageSize , currentPage ,  onPageChange }) => {\r\n    const pageCount = Math.ceil(itemCount/pageSize);\r\n    if(pageCount === 1) return null;\r\n    \r\n    const pages = _.range(1 , pageCount + 1);\r\n    //[1,2,3] Array of numbers\r\n\r\n    return ( \r\n        <nav>\r\n            <ul className=\"pagination\">\r\n               \r\n                {pages.map(page => (\r\n                    <li key={page} className={ page === currentPage ? 'page-item active' : 'page-item'}>\r\n                        <a  className=\"page-link\" onClick={() => onPageChange(page)}>\r\n                        {page} \r\n                        </a>\r\n                    </li>\r\n                ))}\r\n                \r\n            </ul>\r\n        </nav>\r\n     );\r\n}\r\n\r\nPagination.propTypes ={\r\n    itemCount : PropTypes.number.isRequired,\r\n    pageSize : PropTypes.number.isRequired,\r\n    currentPage : PropTypes.number.isRequired,  \r\n    onPageChange : PropTypes.func.isRequired\r\n}\r\nexport default Pagination;","import http from './httpService';\r\n\r\nexport function getGenres() {\r\n    return http.get('/genres');\r\n  }\r\n  ","import React from 'react';\r\n\r\nconst Input = ({ name , label ,  errors , ...rest}) => {\r\n    return ( \r\n        <React.Fragment>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"username\">{ label }</label>\r\n                <input\r\n                    {...rest} \r\n                    name={name}\r\n                    id={name}\r\n                    className=\"form-control\" />\r\n            </div>\r\n            {errors && <div className=\"alert alert-danger\">{ errors }</div>}\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default Input;","import React from 'react';\r\n\r\nconst Select = ({ name , label , options , error , ...rest }) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <select name={name} id={name} {...rest} className=\"form-control\" >\r\n                <option value=\"\"/>\r\n                {options.map(option => (\r\n                    <option key={option._id} value={option._id} >\r\n                        {option.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            {error && <div className=\"altert alert-danger\"> {error} </div>}\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Select;","import React, { Component } from 'react'\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './select';\r\n\r\nclass Form extends Component {\r\n\r\n    state = { \r\n        data: {},\r\n        errors:{}\r\n     };\r\n\r\n     validate = () => {\r\n        console.log('Start Saved');\r\n        const options = { abortEarly : false };\r\n        const { error } = Joi.validate(this.state.data , this.schema, options);\r\n        if(!error) return null;\r\n        const errors = {};\r\n        for(let item of error.details)\r\n            errors[item.path[0]] = item.message;\r\n        console.log('Error is' , errors)\r\n        return errors;\r\n    };\r\n\r\n    validateProperty = ({ name , value }) =>{\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] };\r\n        const { error } = Joi.validate(obj , schema);\r\n        return error ? error.details[0].message : null;\r\n    };\r\n\r\n    handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        const errors = this.validate();\r\n        console.log(errors);\r\n        this.setState({ errors : errors || {} });\r\n\r\n        if(errors) return;\r\n\r\n        this.doSubmit();\r\n\r\n    }\r\n\r\n    handleChange = ({ currentTarget : input }) =>{\r\n        const errors = {...this.state.errors};\r\n        const errorMessage = this.validateProperty(input);\r\n        if(errorMessage) errors[input.name] = errorMessage;\r\n        else delete errors[input.name]; \r\n\r\n        const data = { ...this.state.data };\r\n        data[input.name] = input.value;\r\n        this.setState({\r\n            data,\r\n            errors\r\n        });\r\n    };\r\n\r\n    renderButton(label){\r\n        return(\r\n        <button \r\n            disabled={this.validate()}\r\n            className=\"btn btn-primary\">\r\n        {label} </button>);\r\n    }\r\n\r\n    renderInput(name , label , type = 'text'){\r\n        const { data , errors } = this.state;\r\n        return(\r\n            <Input \r\n                type={type}\r\n                name={name} \r\n                value={data[name]} \r\n                label={label}\r\n                onChange={this.handleChange}\r\n                errors={errors[name]} />\r\n        );\r\n    }\r\n\r\n    renderSelect(name , label , options){\r\n        const { data , errors } = this.state;\r\n\r\n        return (\r\n            <Select\r\n                name={name}\r\n                value={data[name]}\r\n                label={label}\r\n                options={options}\r\n                onChange={this.handleChange}\r\n                errors={errors[name]}\r\n             />\r\n        );\r\n    }\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\n\r\nconst SearchBox = ({ value , onChange }) => {\r\n    return ( \r\n        <input \r\n            type=\"text\"\r\n            name=\"query\"\r\n            className=\"form-control my-3\"\r\n            placeholder=\"Search ...\"\r\n            value={value}\r\n            onChange={e=>onChange(e.currentTarget.value)}\r\n            />\r\n     );\r\n};\r\n \r\nexport default SearchBox;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getMovies, deleteMovie } from '../services/movieServices';\r\nimport MoviesTable from './moviesTable';\r\nimport ListGroup  from './common/listGroup';\r\nimport Pagination from './common/pagination';\r\nimport { getGenres } from '../services/genreService';\r\nimport { paginate } from '../utils/paginate';\r\nimport Form from './common/form';\r\nimport _ from 'lodash';\r\nimport SearchBox from './common/searchBox';\r\nclass Movies extends Form {\r\n\r\n    state = { \r\n        allMovies: [],\r\n        genres:[],\r\n        count:1,\r\n        currentPage: 1,\r\n        pageSize: 4,\r\n        searchQuery: \"\",\r\n        selectedGenre: null,\r\n        sortColumn:{ path: 'title' , order: 'asc' }\r\n     }\r\n\r\n     async componentDidMount(){\r\n         const { data } = await getGenres();\r\n         const genres = [{ _id : \"\" , name: 'All Genres'} , ...data]\r\n\r\n        const { data: allMovies } = await getMovies();\r\n        this.setState({\r\n            allMovies,\r\n            genres\r\n        });\r\n     }\r\n\r\n     handleDelete = async (movie) => {\r\n\r\n        const orignalMovies = this.state.allMovies;\r\n         const allMovies = orignalMovies.filter(m => m._id !== movie._id);\r\n         this.setState({ allMovies });\r\n\r\n         try{\r\n            await deleteMovie(movie._id);\r\n         }catch(ex){\r\n             if(ex.response && ex.response.status === 404)\r\n                toast.error('This movie has already been deleted !!!');\r\n             this.setState({\r\n                 allMovies : orignalMovies\r\n             });\r\n         }\r\n     };\r\n\r\n     handleLike = (movie) =>{\r\n        //console.log('Liked Clicked' , movie);\r\n        const allMovies = [...this.state.allMovies];\r\n        const index = allMovies.indexOf(movie);\r\n        allMovies[index] = { ...allMovies[index] };\r\n        allMovies[index].liked = !allMovies[index].liked;\r\n        this.setState({ allMovies }); \r\n     };\r\n\r\n     handlePageChange = page =>{\r\n         this.setState({\r\n             currentPage: page\r\n         });\r\n     }\r\n\r\n     handleGenreSelect = genre => {\r\n         this.setState({ selectedGenre: genre, searchQuery:\"\", currentPage: 1 });\r\n     }\r\n\r\n     handleSearch =(query)=>{\r\n        this.setState({ searchQuery: query , selectedGenre: null , currentPage: 1 });\r\n     };\r\n\r\n     handleSort = sortColumn =>{\r\n         this.setState({\r\n             sortColumn\r\n         });\r\n     }\r\n\r\n     getPagedData = () =>{\r\n        const { pageSize,\r\n             currentPage,\r\n             allMovies,\r\n             searchQuery,\r\n            selectedGenre,\r\n            sortColumn } = this.state;\r\n\r\n        let filtered = allMovies;\r\n        if(searchQuery){\r\n             filtered = allMovies.filter(m =>\r\n                m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));\r\n        }\r\n        else if(selectedGenre && selectedGenre._id){\r\n            \r\n            filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n        }\r\n       \r\n        const sorted =  _.orderBy(filtered , [sortColumn.path] , [sortColumn.order])\r\n        \r\n        const movies = paginate(sorted , currentPage , pageSize);\r\n\r\n        return { totalCount: filtered.length , movies };\r\n\r\n     }\r\n\r\n\r\n    render() { \r\n        const { length: count } = this.state.allMovies;\r\n        const { pageSize,\r\n                currentPage,\r\n                 sortColumn,\r\n                searchQuery } = this.state;\r\n        const { user } = this.props;\r\n        // if(count === 0) \r\n        //     return <div className=\"alert alert-danger mt-4\" role=\"alert\">There is no movie in database </div>\r\n\r\n        const {totalCount , movies} =   this.getPagedData();\r\n      \r\n\r\n        return (\r\n        <div className=\"container row\">\r\n            <div className=\"col-sm-2 mt-4\">\r\n                <ListGroup \r\n                    items={ this.state.genres }\r\n                    selectedItem={this.state.selectedGenre}\r\n                    onItemSelect={this.handleGenreSelect}/>\r\n            </div>\r\n            <div className=\"col mt-4\">\r\n                {user &&\r\n                (<Link to='/movies/new'\r\n                    className=\"btn btn-primary\"\r\n                style={{ marginBottom: 20 }}>New Movie </Link>)}\r\n                <p> Showing {totalCount} movies in database </p>\r\n                <SearchBox value={searchQuery}\r\n                           onChange={this.handleSearch} />    \r\n                <MoviesTable movies={movies}\r\n                            sortColumn={sortColumn}\r\n                            onLike={this.handleLike}\r\n                            onDelete = {this.handleDelete}\r\n                            onSort={this.handleSort} />\r\n                <Pagination \r\n                itemCount={totalCount} \r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChange={this.handlePageChange} />\r\n            </div>   \r\n        </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Movies;","import _ from 'lodash';\r\n\r\nexport function paginate(items , pageNumber , pageSize){\r\n    const startIndex = (pageNumber -1) * pageSize;\r\n    return _(items)\r\n            .slice(startIndex)\r\n            .take(pageSize)\r\n            .value();\r\n}","import React from 'react';\r\n\r\nconst Customers = () => {\r\n    return ( \r\n        <h1> Customers </h1>\r\n     );\r\n}\r\n \r\nexport default Customers;","import React, { Component } from 'react';\r\n\r\nconst Rentals = () => {\r\n    return ( \r\n        <h1> Rentals </h1>\r\n     );\r\n}\r\n \r\nexport default Rentals;","import React, { Component } from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (<h1> Page Not Found </h1>);\r\n}\r\n \r\nexport default NotFound;","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { getGenres } from '../services/genreService';\r\nimport { getMovie, saveMovie } from '../services/movieServices';\r\n\r\nclass MovieForm extends Form{\r\n\r\n    state = {\r\n        data : {\r\n             title: '',\r\n             genreId: '',\r\n             numberInStock: '',\r\n             dailyRentalRate: ''},\r\n        genres:[],\r\n        errors : {} \r\n    };\r\n\r\n    schema = {\r\n        _id: Joi.string(),\r\n        title: Joi.string()\r\n                    .required()\r\n                    .label('Title'),\r\n        genreId: Joi.string()\r\n                    .required()                    \r\n                    .label('Genre'),\r\n        numberInStock: Joi.number()\r\n                    .min(0)\r\n                    .max(100)\r\n                    .integer()\r\n                    .required()                    \r\n                    .label('Number In Stock'),\r\n        dailyRentalRate: Joi.number()\r\n                 .min(0)\r\n                 .max(10)\r\n                 .required()                    \r\n                 .label('Daily Rental Rate'),\r\n    };\r\n\r\n    async populateGenre(){\r\n        const { data : genres} = await getGenres();\r\n        this.setState({ genres });\r\n    }\r\n\r\n    async populateMovie(){\r\n        try{\r\n            const movieId = this.props.match.params.id;\r\n            if(movieId === 'new') return;\r\n\r\n            const { data: movie } = await getMovie(movieId);\r\n            this.setState({ data: this.mapToViewModel(movie) });\r\n        }catch(ex){\r\n            if(ex.response && ex.response.status === 404) \r\n                this.props.history.replace('/not-found');\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        await this.populateGenre();\r\n\r\n        await this.populateMovie();\r\n\r\n    }\r\n\r\n    // Transformation returning a new Object\r\n    mapToViewModel(movie){\r\n        return {\r\n            _id: movie._id,\r\n            title: movie.title,\r\n            genreId: movie.genre._id,\r\n            numberInStock: movie.numberInStock,\r\n            dailyRentalRate: movie.dailyRentalRate\r\n        };\r\n    }\r\n\r\n    doSubmit = async () =>{\r\n        // Calling a Server\r\n        await saveMovie(this.state.data);\r\n        console.log('Submitted ...');\r\n        this.props.history.replace('/movies');\r\n\r\n   }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <h1>Adding New Movie</h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        {this.renderInput('title' , 'Title')}\r\n                        {this.renderSelect('genreId' , \"Genre\" , this.state.genres)}\r\n                        {this.renderInput('numberInStock' , 'Number In Stock')}\r\n                        {this.renderInput('dailyRentalRate' , 'Daily Rental Rate')}\r\n                        { this.renderButton('Save') }\r\n                    </form>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MovieForm;","import React from 'react';\r\nimport { NavLink , Link } from 'react-router-dom';\r\n\r\nconst NavBar = ({ user }) => {\r\n    return ( \r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n                Vidly\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item active\">\r\n                    <NavLink className=\"nav-link\" to=\"/movies\">Movies</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/customers\">Customers</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/rentals\">Rentals</NavLink>\r\n                </li>\r\n                {!user && (\r\n                    <React.Fragment>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/register\">Register</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n                        </li>\r\n\r\n                    </React.Fragment>\r\n                )}\r\n\r\n                 {user && (\r\n                    <React.Fragment>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/profile\">\r\n                            {user.name}</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/logout\">\r\n                            Logout</NavLink>\r\n                        </li>\r\n\r\n                    </React.Fragment>\r\n                )}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default NavBar;","import React , { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\nimport { async } from 'q';\r\n\r\nclass LoginForm extends Form{\r\n\r\n    state = {\r\n        data : { username: '' , password: ''},\r\n        errors : {} \r\n    };\r\n\r\n    schema = {\r\n        username: Joi.string()\r\n                    .required()\r\n                    .label('Username'),\r\n        password: Joi.string()\r\n                    .required()                    \r\n                    .label('Password'),\r\n    };\r\n\r\n    doSubmit = async () =>{\r\n        try {\r\n            const { data } = this.state;\r\n            await auth.login(data.username , data.password);\r\n            const { state } = this.props.location;\r\n            window.location = state ? state.from.pathname : '/';\r\n        } catch (ex) {\r\n            if(ex.response && ex.response.status === 400){\r\n                const errors = { ...this.state.errors }; \r\n                errors.username = ex.response.data;\r\n                this.setState({ errors });\r\n            }   \r\n        }\r\n   }\r\n\r\n    render() { \r\n        if(auth.getCurrentUser()) return <Redirect to='/' />;\r\n\r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <h1>Login</h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        {this.renderInput('username' , 'Username')}\r\n                        {this.renderInput('password' , 'Password' , 'password')}\r\n                        { this.renderButton('Login') }\r\n                    </form>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default LoginForm;","import http from './httpService';\r\n\r\nconst apiEndpoint = '/users';\r\n\r\nexport function register(user){\r\n    return http.post(apiEndpoint , {\r\n        email: user.username,\r\n        name: user.name,\r\n        password: user.password\r\n    })\r\n}","import React  from 'react';\r\nimport Joi from 'joi-browser';\r\nimport * as userService from '../services/userService';\r\nimport auth from '../services/authService';\r\nimport Form from './common/form';\r\n\r\nclass LoginForm extends Form{\r\n\r\n    state = {\r\n        data : { username: '' , password: '' , name: '' },\r\n        errors : {} \r\n    };\r\n\r\n    schema = {\r\n        username: Joi.string()\r\n                    .required()\r\n                    .email({ minDomainSegments: 2 })\r\n                    .label('Username'),\r\n        password: Joi.string()\r\n                    .required()\r\n                    .min(5)\r\n                    .label('Password'),\r\n        name: Joi.string()\r\n                .required()\r\n                .label('Name')\r\n    };\r\n\r\n    doSubmit = async () =>{\r\n        try{\r\n            const response = await userService.register(this.state.data);\r\n            auth.loginWithJwt(response.headers['x-auth-token']);\r\n            window.location = '/';\r\n        }catch(ex){\r\n            if(ex.response && ex.response.status === 400){\r\n                const errors = {...this.state.errors};\r\n                errors.username = ex.response.data;\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n   }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <h1>Register</h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        {this.renderInput('username' , 'Username')}\r\n                        {this.renderInput('password' , 'Password' , 'password')}\r\n                        {this.renderInput('name' , 'Name')}\r\n                        { this.renderButton('Register') }\r\n                    </form>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default LoginForm;","import { Component } from 'react';\r\nimport auth from '../services/authService';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        auth.logout();\r\n        window.location = '/';\r\n    }\r\n\r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout;","import React from 'react';\r\nimport { Redirect , Route } from 'react-router-dom';\r\nimport auth from '../../services/authService';\r\n\r\nconst ProtectedRoute = ({path , component: Component , render , ...rest}) => {\r\n    return (  \r\n    <Route \r\n    {...rest}\r\n    render={props =>{\r\n        console.log(props);\r\n      if(!auth.getCurrentUser()) return <Redirect to={{\r\n          pathname: '/login',\r\n          state: { from: props.location }\r\n      }} />;\r\n      return Component ? <Component {...props} /> : render(props);\r\n    }} />\r\n    );\r\n}\r\n \r\nexport default ProtectedRoute;","import React , { Component } from 'react';\nimport { Route , Redirect , Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Movies from'./components/movies';\nimport Customers from './components/customers';\nimport Rentals from './components/rentals';\nimport NotFound from './components/notFound';\nimport MovieForm from './components/movieForm';\nimport NavBar from './components/navBar';\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\nimport Logout from './components/logout';\nimport ProtectedRoute from './components/common/protectedRoute';\nimport auth from './services/authService';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {  }\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  \n\n  render() { \n    const { user } = this.state;\n    return ( \n      <React.Fragment>\n      <ToastContainer />\n      <NavBar user={user}/>\n      <main className=\"container\">\n        <Switch>\n          <Route path=\"/register\" component={RegisterForm} />\n          <Route path=\"/login\" component={LoginForm} />\n          <Route path=\"/logout\" component={Logout} />\n          <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n          <Route path=\"/movies\" \n            render={props => <Movies {...props} user={this.state.user} />} />\n          <Route path=\"/customers\" component={Customers} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Route path=\"/rentals\" component={Rentals} />\n          <Redirect from=\"/\" exact to=\"/movies\" />\n          <Redirect to=\"/not-found\" />\n\n        </Switch>\n      </main>\n    </React.Fragment>\n     );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n     document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}